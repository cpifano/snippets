server {
    # Puerto que escuchará este VH:
    # El parametro default server solo debería estar en un solo VH.
    listen 80 default_server;

    # IPv6 notation for all interfaces:
    listen  [::]:80;

    # example.com:
    server_name  localhost;

    # Main location:
    location / {
        # Archivos del sitio:
        root   /usr/share/nginx/html;

        # Archivos de entrada al sitio en orden de aceptación:
        index  index.html index.htm;
    }

    # Redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # Deny .htaccess files:
    location ~ /\.ht {
        deny  all;
    }

    # Opcion 01 - ProxyPass (Redireccionar a otra app por IP):
    location /app {
      proxy_pass http://192.168.1.100:3001; #IP de nuestro backend.
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
    }

    # Opción 02 - Upstream:
    location /app2 {
      proxy_pass my-backend; # Definido en /etc/nginx/nginx.conf
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
    }
}

#---------------------------------------------------------------------------------------------#
# Ejemplo de upstream en /etc/nginx/nginx.conf
#---------------------------------------------------------------------------------------------#
# Este ejemplo tiene un balanceador de carga entre ambos servidores.
#---------------------------------------------------------------------------------------------#
# upstream my-backend {
#   server 192.168.1.100:3001 ;
#
#   # Podemos establecer una cuota mayor a un nodo
#   # Cada 3 request enviará otra al resto.
#   server 192.168.1.101:3001 weight=3;
# }
#---------------------------------------------------------------------------------------------#
