//---------------------------------------------------------------------------------------------------------------------------//
// IF:
//---------------------------------------------------------------------------------------------------------------------------//
fn main(){

    if condicion {
        //...//
    } else if condicion {
        //...//
    } else {
        //...//
    }
}
//---------------------------------------------------------------------------------------------------------------------------//


//---------------------------------------------------------------------------------------------------------------------------//
// LOOP:
//---------------------------------------------------------------------------------------------------------------------------//
fn main(){

    //Loop genera un ciclo infinito:
    loop {
        //...//

        //Cortar el ciclo:
        break;
    }
}
//---------------------------------------------------------------------------------------------------------------------------//


//---------------------------------------------------------------------------------------------------------------------------//
// FOR:
//---------------------------------------------------------------------------------------------------------------------------//
fn main(){
    let numeros: [i32; 5] = [1, 2, 3, 4, 5];

    for actual in numeros.iter() {
        println!("Valor actual: {}", actual);
    }

    //Establecer un rango (Del 1 al 99);
    for actual in 1..100 {
        println!("Valor actual: {}", actual);
    }
}
//---------------------------------------------------------------------------------------------------------------------------//


//---------------------------------------------------------------------------------------------------------------------------//
// WHILE:
//---------------------------------------------------------------------------------------------------------------------------//
fn main(){

    while condicion {
        //...//
    }
}
//---------------------------------------------------------------------------------------------------------------------------//


//---------------------------------------------------------------------------------------------------------------------------//
// MATCH (SWITCH):
//---------------------------------------------------------------------------------------------------------------------------//
fn main(){

    match condicion {
        posible_valor => accion/es_a_ejecutar,
        1 => println!("Valor 1"),
        2 => println!("Valor 2"),

        //OR:
        4 | 5 | 6 => println!("Valor entre el 4 y el 6"),

        //Rango:
        7..=100 => {
            println!("Valor entre el 7 y el 100");
            println!("Sentencias múltiples gracias al bloque");
        },

        //Default
        _ => println!("Caso default");
    }

    //Algoritmo Fizz Buzz:
    match (numero % 3, numero % 5) { //Evaluar una tupla (Evaluar cada uno de sus datos).
        //Caso 1 Divisible en ambos (3 y 5):
        (0, 0) => println!("Fizz Buzz"), //Resultado de funcion resto (%) es cero en ambos casos.
        (0, _) => println!("Fizz"), //Resultado de funcion resto (%) es cero solo en 3, en caso 5 es cualquier otro valor.
        (_, 0) => println!("Buzz"), //Resultado de funcion resto (%) es cero solo en 5, en caso 3 es cualquier otro valor.
        //Default:
        _ => println!("{}", numero);
    }
}
//---------------------------------------------------------------------------------------------------------------------------//


//---------------------------------------------------------------------------------------------------------------------------//
// IF LET:
//---------------------------------------------------------------------------------------------------------------------------//
// En algunos casos hacer coincidir enums con match es incómodo.
// Para estos casos podemos utilizar if let que es más limpio y además permite especificar varias opciones de falla.
//---------------------------------------------------------------------------------------------------------------------------//
//SIN IF LET:
fn main(){
    let opcional = Some(7);

    match opcional {
        Some(i) => {
            println!('Coincidencia {:?}', i);
        },
        _ => {},
    }
}

//CON IF LET:
fn main(){
    let opcional = Some(7);

    if let Some(i) = opcional {
        println!('Coincidencia {:?}', i);
    }
}

//IF LET ELSE:
//Podemos anidar casos de else o inclusive más opciones de falla con else if.
fn main(){
    let opcional = Some(7);

    if let Some(i) = opcional {
        println!('Coincidencia {:?}', i);
    } else {
        println!('Falló');
    }
}
//---------------------------------------------------------------------------------------------------------------------------//
